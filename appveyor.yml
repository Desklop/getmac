# AppVeyor.yml from https://github.com/ogrisel/python-appveyor-demo
# License: CC0 1.0 Universal: http://creativecommons.org/publicdomain/zero/1.0/

# Not a C#/etc project
build: off

environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"

  matrix:
    # Pre-installed Python versions, which Appveyor may upgrade to
    # a later point release.
    # See: https://www.appveyor.com/docs/installed-software#python

    - PYTHON: "C:\\Python26"
      PYTHON_VERSION: "2.6.x"
      PYTHON_ARCH: "32"
      TOXENV: py26

    - PYTHON: "C:\\Python26-x64"
      PYTHON_VERSION: "2.6.x"
      PYTHON_ARCH: "64"
      TOXENV: py26

    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "32"
      TOXENV: py27

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "64"
      TOXENV: py27

    - PYTHON: "C:\\Python34"
      PYTHON_VERSION: "3.4.x"
      PYTHON_ARCH: "32"
      TOXENV: py34

    - PYTHON: "C:\\Python34-x64"
      PYTHON_VERSION: "3.4.x"
      PYTHON_ARCH: "64"
      TOXENV: py34

    - PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5.x"
      PYTHON_ARCH: "32"
      TOXENV: py35

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.x"
      PYTHON_ARCH: "64"
      TOXENV: py35

    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6.x"
      PYTHON_ARCH: "32"
      TOXENV: py36

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.x"
      PYTHON_ARCH: "64"
      TOXENV: py36

    - PYTHON: "C:\\Python37"
      PYTHON_VERSION: "3.7.x"
      PYTHON_ARCH: "32"
      TOXENV: py37

    - PYTHON: "C:\\Python37-x64"
      PYTHON_VERSION: "3.7.x"
      PYTHON_ARCH: "64"
      TOXENV: py37

init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"

install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }
#  - ps: "ls \"C:/\""

  # Install Python (from the official .msi of https://python.org) and pip when
  # not already installed.
  - ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  - "python -c \"import sys; print(sys.platform)\""
  - "python -c \"import sys; print(sys.version)\""
  - "python -c \"import os; print(os.name)\""
  - "python -c \"import platform; print(platform.version())\""
  - "python -c \"import platform; print(platform.uname())\""

  # System network information
  - "getmac /fo table /v"
  - "ipconfig /all"
  - "arp -a"

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "python -m pip install --upgrade pip"
  - "python -m pip install --upgrade tox"
#  - "python -m pip install virtualenv"
#  - "virtualenv env"
#  - env\Scripts\activate.bat
#  - "python -m pip install -e ."

#build_script:
#   #  - "%CMD_IN_ENV% python setup.py install"
#   - ps: python -m pip install -e .


test_script:
- tox
#- C:\Python36\scripts\tox

cache:
- '%LOCALAPPDATA%\pip\cache'
- '%USERPROFILE%\.cache\pre-commit'

#test_script:
#   - chcp 65001
#   - set PYTHONIOENCODING=utf8
#   - ps: .\appveyor\run_tests.ps1

#after_test:
#  # If tests are successful, create binary packages for the project.
#  - "%CMD_IN_ENV% python setup.py bdist_wheel"
#  - "%CMD_IN_ENV% python setup.py bdist_wininst"
#  - "%CMD_IN_ENV% python setup.py bdist_msi"
#  - ps: "ls dist"

#artifacts:
#  # Archive the generated packages in the ci.appveyor.com build report.
#  - path: dist\*

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse
#

#on_finish:
#  # Upload test results to AppVeyor
#  - ps: |
#      # this uploads nosetests.xml produced in test_script step
#      $wc = New-Object 'System.Net.WebClient'
#      $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\nosetests.xml))