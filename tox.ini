[tox]
envlist = py{27,34,35,36,37,py}-{linux,macos,windows},ironpython-windows,pypy3-{linux,macos}
skip_missing_interpreters = true
minversion = 3.4
requires = setuptools

[testenv]
description = Run CLI tests under {basepython}
setenv =
    PIP_DISABLE_VERSION_CHECK = 1
    ; NOTE: pytest-random-order only supports Python 3.5+
    py{35,36,37,py3}: PYTEST_ADDOPTS = "--random-order"

passenv = http_proxy https_proxy no_proxy SSL_CERT_FILE TOXENV CI TRAVIS TRAVIS_* APPVEYOR APPVEYOR_* CODECOV_*
platform =
    linux: linux
    macos: darwin
    windows: win32
deps =
    pytest
    pytest-random-order;python_version>='3.5'
    pytest-mock
commands =
    linux: getmac --help
    linux: getmac --version
    linux: getmac
    macos: getmac --help
    macos: getmac --version
    macos: getmac
    python -m getmac --help
    python -m getmac --version
    python -m getmac
    python -m getmac --debug
    python -m getmac -dd
    python -m getmac -ddd
    python -m getmac --no-network-requests --debug
    python -m getmac -4 127.0.0.1 -ddd
    python -m getmac -n localhost -ddd
    python -m getmac --no-network-requests -4 127.0.0.1 -ddd
    python -m getmac --no-network-requests -n localhost -ddd
    windows: python -m getmac -i Ethernet -ddd
    pytest --basetemp={envtmpdir} --verbose {posargs}

[testenv:osx-travis]
description = "Hack for testing interface on Travis CI with OSX"
commands =
    {[testenv]commands}
    getmac -i en0 -dd

[testenv:linux-travis]
description = "Hack for testing interface on Travis CI with Linux"
commands =
    {[testenv]commands}
    getmac -i ens4 -dd

[testenv:coverage]
description = "Run the test suite with coverage checks and reporting"
setenv =
    {[testenv]setenv}
    COVERAGE_FILE = .coverage.{envname}
passenv =
    {[testenv]passenv}
deps =
    {[testenv]deps}
    pytest-cov
    coverage
commands =
    pytest --basetemp={envtmpdir} --verbose --cov=getmac --cov=tests --cov-report term-missing --cov-report html {posargs}

[testenv:mypy]
description = "Run static type analysis using mypy"
skip_install = true
ignore_errors = true
basepython = py3
deps = mypy
commands = mypy -p getmac

[testenv:check]
description = "Run code quality, static analysis, and spelling checks"
skip_install = true
ignore_errors = false
deps =
    check-manifest
    codespell
    flake8
    flake8-bugbear;python_version>='3.5'
    flake8-import-order
    flake8-tidy-imports
    flake8-todo
    flake8-string-format
    ; NOTE: this is currently buggy on Windows (01/17/2019)
    ;flake8-mypy;python_version>='3.5'
    bandit
commands =
    python setup.py check --strict --metadata
    check-manifest {toxinidir}
    codespell --check-filenames --skip="*.pyc,*.class,*.git,*.vagrant,*.tox,*.egg-info,*.idea,*.vscode,_build,.doctrees,htmlcov"
    flake8 getmac tests setup.py
    bandit --recursive --skip B404,B603,B104 getmac

[flake8]
max-line-length = 99
application-import-names = getmac
exclude = .github, .vagrant, docs, packaging, samples, scripts, *.egg-info, __pycache__, .git, .tox
ignore = E203, W503, E401, F401, E226
import-order-style = pycharm
show-source = True
max-complexity = 28

[pytest]
minversion = 3.4
testpaths = tests
norecursedirs = .github getmac samples scripts .git .tox .vagrant .idea .vscode dist build *.egg .*
addopts =
    --durations=5
    --tb=short
filterwarnings =
    ignore::DeprecationWarning

[mypy]
; https://github.com/ambv/flake8-mypy#configuration
python_version = 3.6
platform = linux
show_column_numbers = True
show_error_context = False
follow_imports = skip
cache_dir = /dev/null
ignore_missing_imports = True
disallow_untyped_calls = False
warn_return_any = False
strict_optional = True
warn_no_return = True
warn_redundant_casts = False
warn_unused_ignores = False
disallow_untyped_defs = False
check_untyped_defs = False

warn_unused_configs = True
show_traceback = True
