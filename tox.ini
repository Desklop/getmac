[tox]
; NOTE: jython doesn't play well with pyenv and tox
envlist = py{27,34,35,36,37,py}-{linux,macos,windows},ironpython-windows,pypy3-{linux,macos}
skip_missing_interpreters = true
minversion = 3.4

[testenv]
description = Run CLI tests under {basepython}
setenv =
    PIP_DISABLE_VERSION_CHECK = 1
passenv = http_proxy https_proxy no_proxy SSL_CERT_FILE TOXENV CI TRAVIS TRAVIS_* APPVEYOR APPVEYOR_* CODECOV_*
platform =
    linux: linux
    macos: darwin
    windows: win32
deps =
    pytest
    pytest-randomly
    pytest-mock
    pytest-benchmark
commands =
    python -m getmac --help
    python -m getmac --version
    python -m getmac
    python -m getmac --debug
    python -m getmac -dd
    python -m getmac -ddd
    python -m getmac --no-network-requests --debug
    python -m getmac -4 127.0.0.1 -ddd
    python -m getmac -n localhost -ddd
    python -m getmac --no-network-requests -4 127.0.0.1 -ddd
    python -m getmac --no-network-requests -n localhost -ddd
    windows: python -m getmac -i Ethernet -ddd
    pytest --basetemp={envtmpdir} --benchmark-disable --verbose {posargs}

[testenv:osx-travis]
description = "Hack for testing interface on Travis CI with OSX"
commands =
    {[testenv]commands}
    python -m getmac -i en0 -dd

[testenv:linux-travis]
description = "Hack for testing interface on Travis CI with Linux"
commands =
    {[testenv]commands}
    python -m getmac -i ens4 -dd

[testenv:coverage]
description = "Run the test suite with coverage checks and reporting"
setenv =
    {[testenv]setenv}
    COVERAGE_FILE = .coverage.{envname}
passenv =
    {[testenv]passenv}
deps =
    {[testenv]deps}
    pytest-cov
    coverage
commands =
    pytest --basetemp={envtmpdir} --benchmark-enable --cov=getmac \
           --cov-report term-missing --cov-report html {posargs}

[testenv:check]
description = "Run code quality, static analysis, and spelling checks"
skip_install = true
ignore_errors = false
deps =
    check-manifest
    codespell
    flake8
    flake8-bugbear;python_version>='3.5'
    flake8-import-order
    flake8-tidy-imports
    flake8-print
    flake8-builtins
    flake8-blind-except
    flake8-comprehensions
    flake8-debugger
    pep8-naming
    flake8-string-format
    ; NOTE: the released version of flake8-mypy is buggy on Windows (17.8.0)
    ; flake8-mypy;python_version>='3.5'
    https://github.com/ambv/flake8-mypy/archive/master.tar.gz
    bandit
commands =
    python setup.py check --strict --metadata
    check-manifest {toxinidir}
    codespell --check-filenames --skip="*.out,build,dist,*.pyc,*.class,*.git,*.vagrant,*.tox,*.egg-info,*.idea,*.vscode,_build,.doctrees,htmlcov"
    flake8 getmac tests setup.py
    ; TODO: add --quiet once the next bandit release happens
    bandit --recursive --skip B404,B603,B104 getmac

[flake8]
max-line-length = 99
application-import-names = getmac
exclude = .github, .vagrant, docs, packaging, samples, scripts, *.egg-info, __pycache__, .git, .tox
ignore = E203, W503, E401, F401, E226
import-order-style = pycharm
show-source = True
max-complexity = 28

[pytest]
minversion = 3.4
testpaths = tests
norecursedirs = .github getmac samples scripts .git .tox .vagrant .idea .vscode dist build *.egg .*
addopts =
    --tb=short
filterwarnings =
    ignore::DeprecationWarning
