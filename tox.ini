[tox]
envlist = py{27,34,35,36,37,py}-{linux,macos,windows},ironpython-windows,pypy3-{linux,macos}
skip_missing_interpreters = true
minversion = 3.4
requires = setuptools

[testenv]
description = Run CLI tests under {basepython}
setenv =
    PIP_DISABLE_VERSION_CHECK = 1
passenv = http_proxy https_proxy no_proxy SSL_CERT_FILE TOXENV CI TRAVIS TRAVIS_* APPVEYOR APPVEYOR_* CODECOV_*
platform =
    linux: linux
    macos: darwin
    windows: win32
commands =
    linux: getmac --help
    linux: getmac --version
    linux: getmac
    macos: getmac --help
    macos: getmac --version
    macos: getmac
    python -m getmac --help
    python -m getmac --version
    python -m getmac
    python -m getmac --debug
    python -m getmac -dd
    python -m getmac -ddd
    python -m getmac --no-network-requests --debug
    python -m getmac -4 127.0.0.1 -ddd
    python -m getmac -n localhost -ddd
    python -m getmac --no-network-requests -4 127.0.0.1 -ddd
    python -m getmac --no-network-requests -n localhost -ddd
    windows: python -m getmac -i Ethernet -ddd

[testenv:osx-travis]
description = "Hack for testing interface on Travis CI with OSX"
commands =
    {[testenv]commands}
    getmac -i en0 -dd

[testenv:linux-travis]
description = "Hack for testing interface on Travis CI with Linux"
commands =
    {[testenv]commands}
    getmac -i ens4 -dd

[testenv:bandit]
description = "Static analysis of code for security issues"
skip_install = true
ignore_errors = false
deps = bandit
commands = bandit --recursive --skip B404,B603,B104 getmac

[testenv:codespell]
description = "Check spelling of code"
skip_install = true
ignore_errors = false
deps = codespell
commands = codespell --check-filenames --skip="*.pyc,*.class,*.git,*.vagrant,*.tox,*.egg-info,*.idea,*.vscode,_build,.doctrees"

[testenv:flake8]
description = "Code quality inspection"
skip_install = true
ignore_errors = false
deps = flake8
commands = flake8 getmac tests setup.py

[flake8]
max-line-length = 99
ignore = E203, W503, E401, F401, E226

[testenv:check]
description = "Run all code quality checks (basically everything except tests)"
skip_install = true
ignore_errors = false
deps =
    check-manifest
    {[testenv:codespell]deps}
    {[testenv:flake8]deps}
    {[testenv:bandit]deps}
commands =
    python setup.py check --strict --metadata
    check-manifest {toxinidir}
    {[testenv:codespell]commands}
    {[testenv:flake8]commands}
    {[testenv:bandit]commands}

[testenv:coverage]
description = "Run the test suite with coverage checks and reporting"
skip_install = true
setenv =
    {[testenv]setenv}
    COVERAGE_FILE = .coverage.{envname}
passenv = TOXENV CODECOV_*
deps =
    pytest
    pytest-cov
    coverage
commands =
    pytest --basetemp={envtmpdir} {posargs}

[pytest]
minversion = 3.4
testpaths = tests docs
norecursedirs = .github getmac samples scripts .git .tox .vagrant .idea .vscode dist build *.egg .*
cache_dir = {envtmpdir}.pytest_cache
addopts =
    --tb=short
    --cov=getmac
    --cov=tests
    --cov-report html
filterwarnings =
    ignore::DeprecationWarning
